{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","goods","visibleGoods","ALPHABET","sort","good1","good2","localeCompare","LENGTH","length","map","good","reverse","console","log","getReorderedGoods","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBYA,E,0EAbCC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGUD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAWL,IA4BME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAhCyB,SAC/BA,EAD+B,GAG3B,IADFF,EACC,EADDA,SAAUH,EACT,EADSA,WAENM,EAAY,YAAOD,GAEzB,OAAQF,GACN,KAAKP,EAASW,SACZD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MAEF,KAAKd,EAASgB,OACZN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UACzD,MACF,QACEP,EAAaQ,KAAI,SAAAC,GAAI,OAAIA,KAU7B,OAPIf,GACFM,EAAaU,UAIfC,QAAQC,IAAIf,EAAUH,GAEfM,EAOOa,CAAkBtB,EAAiB,CAC/CM,WACAH,eAoBF,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYnB,IAAaP,EAASW,WAEtCgB,QA1BqB,WAC3BnB,EAAYR,EAASW,WAmBjB,iCAWA,wBACEc,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,6BAA8BnB,IAAaP,EAASgB,SAExDW,QAjCiB,WACvBnB,EAAYR,EAASgB,SA0BjB,4BAWA,wBACES,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,8BAA+BtB,IAEnCuB,QAxCkB,WACxBtB,GAAeD,IAiCX,sBAWEA,KAAgBG,IAEd,wBACEkB,KAAK,SACLD,UAAU,4BACVG,QA9CQ,WAClBtB,GAAc,GACdG,EAAYR,EAASM,OAyCb,sBAeN,6BACE,6BACGG,EAAMS,KAAI,SAAAC,GAAI,OAEb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cC1IpCS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0db06535.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n// import { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport enum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport const getReorderedGoods = (\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) => {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n    default:\n      visibleGoods.map(good => good);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n};\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const goods = getReorderedGoods(goodsFromServer, {\n    sortType,\n    isReversed,\n  });\n\n  const handleSortAlphabetic = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const handleSortLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const handleSortReverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const handleReset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={handleSortAlphabetic}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'button is-success is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={handleSortLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'button is-warning is-light': !isReversed },\n          )}\n          onClick={handleSortReverse}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || !!sortType)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={handleReset}\n            >\n              Reset\n            </button>\n          )}\n\n      </div>\n\n      {/* <GoodsList */}\n      {/*   goods={goods} */}\n      {/* /> */}\n\n      <ul>\n        <ul>\n          {goods.map(good => (\n\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}